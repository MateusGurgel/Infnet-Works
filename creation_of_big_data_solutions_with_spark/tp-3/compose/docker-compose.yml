services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    network_mode: "host"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka1
    network_mode: "host"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    depends_on:
      - zookeeper

  kafka2:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka2
    network_mode: "host"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    depends_on:
      - zookeeper

  kafka-init-topics:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-init-topics
    network_mode: "host"
    depends_on:
      - kafka1
      - kafka2
    entrypoint: /bin/sh
    command: -c "sleep 10 && kafka-topics --create --if-not-exists --topic stream_apostas --partitions 3 --replication-factor 2 --bootstrap-server localhost:9092,localhost:9093"

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    network_mode: "host"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: betalert
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d

  minio:
    image: minio/minio:latest
    container_name: minio
    network_mode: "host"
    volumes:
      - ./minio_data:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    command: server /data --console-address ":9001"

  create-minio-bucket:
    image: minio/mc
    container_name: minio-init
    network_mode: "host"
    depends_on:
      - minio
    entrypoint: /bin/sh -c
    command: >
      "
      sleep 5 &&
      mc alias set local http://localhost:9000 admin admin123 &&
      mc mb local/betalogs || true &&
      mc cp --recursive /data_upload/* local/betalogs/
      "
    volumes:
      - ./minio_data:/data_upload